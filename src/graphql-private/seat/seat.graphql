
type Query {
  GetSeatById(seat_id: Int!): GetSeatByIdResponse
  GetListSeat(
    search: String
    search_field:[String]
    event_id: [Int]
    page: Int
    limit: Int
    sort: String
    sort_by: [String]
  ): GetListSeatResponse
}

type Mutation {
    CreateSeat(
        event_id: Int
        zone: String
        row:String
        seat_number: Int
        seat_status: String
    ): CreateSeatResponse
    UpdateSeat(
        seat_id: Int
        event_id: Int
        zone: String
        row:String
        seat_number: Int
        seat_status: String
    ): UpdateSeatResponse
    DeleteSeat( 
        seat_id: Int
    ): DeleteSeatResponse
}

type Seat{
    seat_id: Int
    event_id: Int
    zone: String
    row:String
    seat_number: Int
    seat_status: String
    created_at: Date
    created_by: String
    updated_at: Date
    updated_by: String
    deleted_at: Date
    deleted_by: String
}


type CreateSeatResponse {
  code: Int
  success: Boolean
  message: String
  timestamp: Date
  data: Seat
}
type UpdateSeatResponse {
  code: Int
  success: Boolean
  message: String
  timestamp: Date
  data: Seat
}
type DeleteSeatResponse {
  code: Int
  success: Boolean
  message: String
  timestamp: Date
  data: Seat
}

type GetSeatByIdResponse {
  code: Int
  success: Boolean
  message: String
  timestamp: Date
  data: Seat
}

type GetListSeatResponse {
  code: Int
  success: Boolean
  message: String
  timestamp: Date
  data: [Seat]
  pagination:Pagination
}


type Pagination {
  page: Int
  limit: Int
  total_page: Int
  total_item: Int
}
